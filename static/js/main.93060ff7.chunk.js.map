{"version":3,"sources":["apis/youtube.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","part","type","maxResults","key","SearchBar","state","term","onFormSubmit","event","preventDefault","props","className","onSubmit","this","value","onChange","e","setState","target","React","Component","VideoItem","currentVideoInArray","videorender","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videoarray","modifiedVideoArray","map","iterator","index","VideoDetail","CurrentVideo","videoSrc","id","videoId","description","App","videos","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","video","ReactDOM","render","document","querySelector"],"mappings":"8NAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,wCACZC,OAAS,CACLC,KAAK,UACLC,KAAM,QACNC,WAAY,EACZC,IAPQ,6C,OCgCGC,E,4MA9BXC,MAAO,CAACC,KAAK,I,EAEbC,aAAe,SAAAC,GAEXA,EAAMC,iBAEN,EAAKC,MAAMH,aAAa,EAAKF,MAAMC,O,4CAEvC,WAAU,IAAD,OACL,OACR,qBAAKK,UAAU,wBAAf,SAEA,sBAAMC,SAAUC,KAAKN,aAAcI,UAAU,UAA7C,SACA,sBAAKA,UAAU,QAAf,UACA,iDAGA,uBACAV,KAAK,OACJa,MAAOD,KAAKR,MAAMC,KAClBS,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEX,KAAMU,EAAEE,OAAOJ,sB,GAtBvBK,IAAMC,WCadC,G,MAZI,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,oBAAoBC,EAAgB,EAAhBA,YACrC,OACA,sBAAKC,QAAU,kBAAMD,EAAYD,IAAsBX,UAAU,kBAAjE,UACI,qBAAKA,UAAU,WAAYc,IAAMH,EAAoBI,QAAQC,WAAWC,OAAOC,IAAKC,IAAI,eACzF,qBAAKnB,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACFW,EAAoBI,QAAQK,eCOvBC,EAXG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,WAAWV,EAAgB,EAAhBA,YAIzBW,EAAqBD,EAAWE,KAAK,SAACC,EAASC,GACrD,OAAO,cAAC,EAAD,CAAWd,YAAaA,EAAaD,oBAAuBc,GAAeC,MAI9E,OAAO,oCAAOH,EAAP,QCMII,EAlBK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,GAAoB,OAAjBA,EACC,OAAO,+CAEX,IAAMC,EAAS,iCAAD,OAAkCD,EAAaE,GAAGC,SAC5D,OACI,gCACI,qBAAK/B,UAAU,WAAf,SAChB,wBAAQoB,MAAM,cAAcN,IAAMe,MAElB,sBAAK7B,UAAU,aAAf,UACD,oBAAIA,UAAW,YAAf,SAA4B4B,EAAab,QAAQK,QACjD,4BAAIQ,EAAab,QAAQiB,qBC8BzBC,E,4MAnCXvC,MAAQ,CAAEwC,OAAQ,GAAIC,cAAe,M,EAQrCC,a,uCAAe,WAAOzC,GAAP,eAAA0C,EAAA,sEAEIC,EAAQC,IAAI,UAAU,CAEzCnD,OAAO,CACHoD,EAAE7C,KALS,OAEb8C,EAFa,OAQnB,EAAKnC,SAAS,CAAC4B,OAAOO,EAASC,KAAKC,MAChCR,cAAeM,EAASC,KAAKC,MAAM,KATpB,2C,wDAanB/B,YAAc,SAACgC,GACX,EAAKtC,SAAS,CAAC6B,cAAcS,K,uDAlB7B,WACI1C,KAAKkC,aAAa,S,oBAmBtB,WACI,OACI,sBAAKpC,UAAU,eAAf,UACA,cAAC,EAAD,CAAWJ,aAAcM,KAAKkC,eAC1C,cAAC,EAAD,CAAaR,aAAc1B,KAAKR,MAAMyC,gBAEtC,cAAC,EAAD,CAAWvB,YAAaV,KAAKU,YAAaU,WAAYpB,KAAKR,MAAMwC,gB,GAhC/C1B,IAAMC,WCFxBoC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.93060ff7.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = 'AIzaSyDGaELRlhoH2TBYDCT2JBFV33yk2_3QQ_4';\r\nexport default axios.create({\r\n    baseURL:'https://www.googleapis.com/youtube/v3',\r\nparams : {\r\n    part:'snippet',\r\n    type: 'video',\r\n    maxResults: 5,\r\n    key:KEY\r\n}\r\n});\r\n","import React from 'react';\r\nclass SearchBar extends React.Component {\r\n    // initializing state\r\n    state ={term:''};\r\n    // form submission function\r\n    onFormSubmit = event => {\r\n    //to prevent page refresh on form submitionn\r\n        event.preventDefault();\r\n//call back to App.js function**********IMP********Deeply nested callback**\r\n        this.props.onFormSubmit(this.state.term);\r\n    };\r\n    render() {\r\n        return (\r\n<div className=\"search-bar ui segment\">\r\n             {/* to start search */}\r\n<form onSubmit={this.onFormSubmit} className=\"ui form\">              \r\n<div className=\"field\"> \r\n<label>Video Search</label>\r\n{/* to hold query */}\r\n\r\n<input \r\ntype=\"text\"\r\n value={this.state.term} \r\n onChange={e => this.setState({ term: e.target.value})}\r\n// .target.value is one of the functions related with event of user input  \r\n// target is the input element\r\n />\r\n</div>\r\n</form>\r\n</div>\r\n        );\r\n    }\r\n};\r\nexport default SearchBar;\r\n\r\n","import './VideoItem.css';//IMP\r\nimport React from 'react';\r\n const  VideoItem = ({currentVideoInArray,videorender}) =>{\r\n     return( \r\n     <div onClick= {() => videorender(currentVideoInArray)} className=\"video-item item\">\r\n         <img className=\"ui image\"  src= {currentVideoInArray.snippet.thumbnails.medium.url} alt='thumbnails' />\r\n        <div className=\"content\" >\r\n            <div className=\"header\">\r\n         {currentVideoInArray.snippet.title}\r\n            </div>\r\n        </div>\r\n         </div>\r\n         );\r\n };\r\n export default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n// const VideoList = (props) =>{ \r\n    //using diff. syntax\r\nconst VideoList = ({videoarray,videorender}) =>{\r\n    //dealing with arrays\r\n//   const modifiedVideoArray = props.videoarray.map( (iterator) => {\r\n//syntax change\r\nconst modifiedVideoArray = videoarray.map( (iterator,index) => {\r\nreturn <VideoItem videorender={videorender} currentVideoInArray ={ iterator} key={index}/>\r\n// index helps in uniquely identifying elements of array\r\n    });\r\n    // using/printing arrays \r\n    return <div> {modifiedVideoArray} </div>;\r\n};\r\nexport default VideoList;","import React from 'react';\r\nconst VideoDetail = ({CurrentVideo}) =>{\r\n    if(CurrentVideo === null){\r\n        return <div> Loading... </div>;\r\n    }\r\n    const videoSrc=`https://www.youtube.com/embed/${CurrentVideo.id.videoId}`;\r\n        return (\r\n            <div> \r\n                <div className=\"ui embed\">\r\n<iframe title='videoPlayer' src ={videoSrc} />\r\n                </div>\r\n                <div className=\"ui segment\"> \r\n               <h4 className =\"ui header\">{CurrentVideo.snippet.title}</h4>\r\n               <p>{CurrentVideo.snippet.description}</p>\r\n                </div>\r\n                \r\n            </div>\r\n          );\r\n};\r\nexport default VideoDetail;","import React from 'react';\r\nimport youtube from '../apis/youtube';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n// class based components for lifecycle methods and state system\r\nclass App extends React.Component {\r\n    //state  object initialixaation\r\n    state = { videos: [], selectedVideo :null };\r\n    //THIS is the function that will make api request.\r\n\r\n    // to remove loading when application first loads up\r\n    componentDidMount(){\r\n        this.onTermSubmit('TCS');\r\n    }\r\n\r\n    onTermSubmit = async (term) => {\r\n// youtube.js willbring a promise that is stored in response variable\r\nconst response = await youtube.get('/search',{\r\n//querry is decided after form is submitted\r\n    params:{\r\n        q:term\r\n    }\r\n});\r\nthis.setState({videos:response.data.items,\r\n    selectedVideo: response.data.items[0]\r\n});\r\n};\r\n// callback from child toparent\r\nvideorender = (video) =>{\r\n    this.setState({selectedVideo:video });\r\n};\r\n    render(){\r\n        return (\r\n            <div className=\"ui container\"> \r\n            <SearchBar onFormSubmit={this.onTermSubmit} />\r\n<VideoDetail CurrentVideo={this.state.selectedVideo} />\r\n            {/* Found {this.state.videos.length} videos. */}\r\n<VideoList videorender={this.videorender} videoarray={this.state.videos}/>\r\n            </div>\r\n        ) \r\n    }\r\n};\r\nexport default App;","    //this file link react with index.html\r\n\r\nimport  ReactDOM  from 'react-dom';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')  \r\n);\r\n    //this file link react with index.html\r\n"],"sourceRoot":""}